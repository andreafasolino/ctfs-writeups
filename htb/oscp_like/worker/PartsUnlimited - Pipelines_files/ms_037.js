"use strict";define("DistributedTask/Client",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Location"],function(e,t,s,r,o){!function(e){t[e]={},Object.defineProperty(t,"__esModule",{value:!0});t[e].TaskAgentClientName="TaskAgent.ITaskAgentRestClient",t[e].getTaskAgentClient=function(s,r){return s.getRestClient(t[e].TaskAgentClientName,r)},s.RestClients.add(t[e].TaskAgentClientName,{factory:class extends r.RestClientBase{constructor(e){super(e)}async addAgentCloud(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/agentclouds/{agentCloudId}",body:e})}async deleteAgentCloud(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/distributedtask/agentclouds/{agentCloudId}",routeValues:{agentCloudId:e}})}async getAgentCloud(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/agentclouds/{agentCloudId}",routeValues:{agentCloudId:e}})}async getAgentClouds(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/agentclouds/{agentCloudId}"})}async getAgentCloudTypes(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/agentcloudtypes"})}async getAgentRequestsForQueue(e,t,s){const r={$top:t,continuationToken:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/queues/{queueId}/agentrequests/{requestId}",routeValues:{queueId:e},queryParams:r})}async queueAgentRequest(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/queues/{queueId}/agentrequests/{requestId}",routeValues:{queueId:t},body:e})}async addAgent(e,t){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:t},body:e})}async deleteAgent(e,t){return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:e,agentId:t}})}async getAgent(e,t,s,r,o,i){const a={includeCapabilities:s,includeAssignedRequest:r,includeLastCompletedRequest:o,propertyFilters:i&&i.join(",")};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:e,agentId:t},queryParams:a})}async getAgents(e,t,s,r,o,i,a){const n={agentName:t,includeCapabilities:s,includeAssignedRequest:r,includeLastCompletedRequest:o,propertyFilters:i&&i.join(","),demands:a&&a.join(",")};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:e},queryParams:n})}async replaceAgent(e,t,s){return this.beginRequest({apiVersion:"5.0",method:"PUT",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:t,agentId:s},body:e})}async updateAgent(e,t,s){return this.beginRequest({apiVersion:"5.0",method:"PATCH",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}",routeValues:{poolId:t,agentId:s},body:e})}async getAzureManagementGroups(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/serviceendpointproxy/azurermmanagementgroups"})}async getAzureSubscriptions(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/serviceendpointproxy/azurermsubscriptions"})}async generateDeploymentGroupAccessToken(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroupaccesstoken/{deploymentGroupId}",routeValues:{project:e,deploymentGroupId:t}})}async addDeploymentGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",routeValues:{project:t},body:e})}async deleteDeploymentGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",routeValues:{project:e,deploymentGroupId:t}})}async getDeploymentGroup(e,t,s,r){const o={actionFilter:s,$expand:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",routeValues:{project:e,deploymentGroupId:t},queryParams:o})}async getDeploymentGroups(e,t,s,r,o,i,a){const n={name:t,actionFilter:s,$expand:r,continuationToken:o,$top:i,ids:a&&a.join(",")};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",routeValues:{project:e},queryParams:n})}async updateDeploymentGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}",routeValues:{project:t,deploymentGroupId:s},body:e})}async getDeploymentGroupsMetrics(e,t,s,r){const o={deploymentGroupName:t,continuationToken:s,$top:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/deploymentgroupsmetrics",routeValues:{project:e},queryParams:o})}async getAgentRequestsForDeploymentMachine(e,t,s,r){const o={machineId:s,completedRequestCount:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentmachinejobrequests/{requestId}",routeValues:{project:e,deploymentGroupId:t},queryParams:o})}async getAgentRequestsForDeploymentMachines(e,t,s,r){const o={machineIds:s&&s.join(","),completedRequestCount:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentmachinejobrequests/{requestId}",routeValues:{project:e,deploymentGroupId:t},queryParams:o})}async refreshDeploymentMachines(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentmachinemessages",routeValues:{project:e,deploymentGroupId:t}})}async generateDeploymentPoolAccessToken(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/deploymentpoolaccesstoken/{poolId}",routeValues:{poolId:e}})}async getDeploymentPoolsSummary(e,t,s){const r={poolName:e,expands:t,poolIds:s&&s.join(",")};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/deploymentPools/deploymentPoolsSummary",queryParams:r})}async getAgentRequestsForDeploymentTarget(e,t,s,r){const o={targetId:s,completedRequestCount:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentTargetJobRequests",routeValues:{project:e,deploymentGroupId:t},queryParams:o})}async getAgentRequestsForDeploymentTargets(e,t,s,r,o,i){const a={targetIds:s&&s.join(","),ownerId:r,completedOn:o,completedRequestCount:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentTargetJobRequests",routeValues:{project:e,deploymentGroupId:t},queryParams:a})}async refreshDeploymentTargets(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/deploymentTargetMessages",routeValues:{project:e,deploymentGroupId:t}})}async queryEndpoint(e){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/endpoint",body:e})}async getEnvironmentDeploymentExecutionRecords(e,t,s,r){const o={continuationToken:s,top:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/environmentdeploymentRecords",routeValues:{project:e,environmentId:t},queryParams:o})}async addEnvironment(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}",routeValues:{project:t},body:e})}async deleteEnvironment(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}",routeValues:{project:e,environmentId:t}})}async getEnvironmentById(e,t,s){const r={expands:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}",routeValues:{project:e,environmentId:t},queryParams:r})}async getEnvironments(e,t,s,r){const o={name:t,continuationToken:s,$top:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}",routeValues:{project:e},queryParams:o})}async updateEnvironment(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}",routeValues:{project:t,environmentId:s},body:e})}async getServiceEndpointExecutionRecords(e,t,s){const r={top:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}/executionhistory",routeValues:{project:e,endpointId:t},queryParams:r})}async addServiceEndpointExecutionRecords(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/executionhistory",routeValues:{project:t},body:e})}async getTaskHubLicenseDetails(e,t,s){const r={includeEnterpriseUsersCount:t,includeHostedAgentMinutesCount:s};return this.beginRequest({apiVersion:"5.0-preview.3",routeTemplate:"_apis/distributedtask/hublicense/{hubName}",routeValues:{hubName:e},queryParams:r})}async updateTaskHubLicenseDetails(e,t){return this.beginRequest({apiVersion:"5.0-preview.3",method:"PUT",routeTemplate:"_apis/distributedtask/hublicense/{hubName}",routeValues:{hubName:t},body:e})}async validateInputs(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/inputvalidation",body:e})}async deleteAgentRequest(e,t,s,r){const o={lockToken:s,result:r};return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e,requestId:t},queryParams:o})}async getAgentRequest(e,t,s){const r={includeStatus:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e,requestId:t},queryParams:r})}async getAgentRequests(e,t,s){const r={$top:t,continuationToken:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e},queryParams:r})}async getAgentRequestsForAgent(e,t,s){const r={agentId:t,completedRequestCount:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e},queryParams:r})}async getAgentRequestsForAgents(e,t,s){const r={agentIds:t&&t.join(","),completedRequestCount:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e},queryParams:r})}async getAgentRequestsForPlan(e,t,s){const r={planId:t,jobId:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:e},queryParams:r})}async queueAgentRequestByPool(e,t){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:t},body:e})}async updateAgentRequest(e,t,s,r){const o={lockToken:r};return this.beginRequest({apiVersion:"5.0",method:"PATCH",routeTemplate:"_apis/distributedtask/pools/{poolId}/jobrequests/{requestId}",routeValues:{poolId:t,requestId:s},queryParams:o,body:e})}async addKubernetesResource(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes/{resourceId}",routeValues:{project:t,environmentId:s},body:e})}async deleteKubernetesResource(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes/{resourceId}",routeValues:{project:e,environmentId:t,resourceId:s}})}async getKubernetesResource(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/kubernetes/{resourceId}",routeValues:{project:e,environmentId:t,resourceId:s}})}async generateDeploymentMachineGroupAccessToken(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/machinegroupaccesstoken/{machineGroupId}",routeValues:{project:e,machineGroupId:t}})}async addDeploymentMachineGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}",routeValues:{project:t},body:e})}async deleteDeploymentMachineGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}",routeValues:{project:e,machineGroupId:t}})}async getDeploymentMachineGroup(e,t,s){const r={actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}",routeValues:{project:e,machineGroupId:t},queryParams:r})}async getDeploymentMachineGroups(e,t,s){const r={machineGroupName:t,actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}",routeValues:{project:e},queryParams:r})}async updateDeploymentMachineGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}",routeValues:{project:t,machineGroupId:s},body:e})}async getDeploymentMachineGroupMachines(e,t,s){const r={tagFilters:s&&s.join(",")};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}/machines",routeValues:{project:e,machineGroupId:t},queryParams:r})}async updateDeploymentMachineGroupMachines(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/machinegroups/{machineGroupId}/machines",routeValues:{project:t,machineGroupId:s},body:e})}async addDeploymentMachine(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:t,deploymentGroupId:s},body:e})}async deleteDeploymentMachine(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:e,deploymentGroupId:t,machineId:s}})}async getDeploymentMachine(e,t,s,r){const o={$expand:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:e,deploymentGroupId:t,machineId:s},queryParams:o})}async getDeploymentMachines(e,t,s,r,o){const i={tags:s&&s.join(","),name:r,$expand:o};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:e,deploymentGroupId:t},queryParams:i})}async replaceDeploymentMachine(e,t,s,r){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:t,deploymentGroupId:s,machineId:r},body:e})}async updateDeploymentMachine(e,t,s,r){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:t,deploymentGroupId:s,machineId:r},body:e})}async updateDeploymentMachines(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/machines/{machineId}",routeValues:{project:t,deploymentGroupId:s},body:e})}async createAgentPoolMaintenanceDefinition(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}",routeValues:{poolId:t},body:e})}async deleteAgentPoolMaintenanceDefinition(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}",routeValues:{poolId:e,definitionId:t}})}async getAgentPoolMaintenanceDefinition(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}",routeValues:{poolId:e,definitionId:t}})}async getAgentPoolMaintenanceDefinitions(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}",routeValues:{poolId:e}})}async updateAgentPoolMaintenanceDefinition(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancedefinitions/{definitionId}",routeValues:{poolId:t,definitionId:s},body:e})}async deleteAgentPoolMaintenanceJob(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:e,jobId:t}})}async getAgentPoolMaintenanceJob(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:e,jobId:t}})}async getAgentPoolMaintenanceJobLogs(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/zip",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:e,jobId:t}})}async getAgentPoolMaintenanceJobs(e,t){const s={definitionId:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:e},queryParams:s})}async queueAgentPoolMaintenanceJob(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:t},body:e})}async updateAgentPoolMaintenanceJob(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"_apis/distributedtask/pools/{poolId}/maintenancejobs/{jobId}",routeValues:{poolId:t,jobId:s},body:e})}async deleteMessage(e,t,s){const r={sessionId:s};return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/messages/{messageId}",routeValues:{poolId:e,messageId:t},queryParams:r})}async getMessage(e,t,s){const r={sessionId:t,lastMessageId:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}/messages/{messageId}",routeValues:{poolId:e},queryParams:r})}async refreshAgent(e,t){const s={agentId:t};return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/messages/{messageId}",routeValues:{poolId:e},queryParams:s})}async refreshAgents(e){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/messages/{messageId}",routeValues:{poolId:e}})}async sendMessage(e,t,s){const r={requestId:s};return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/messages/{messageId}",routeValues:{poolId:t},queryParams:r,body:e})}async getPackage(e,t,s){return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/packages/{packageType}/{platform}/{version}",routeValues:{packageType:e,platform:t,version:s}})}async getPackages(e,t,s){const r={$top:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/packages/{packageType}/{platform}/{version}",routeValues:{packageType:e,platform:t},queryParams:r})}async getAgentPoolMetadata(e){return this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"text/plain",routeTemplate:"_apis/distributedtask/pools/{poolId}/poolmetadata",routeValues:{poolId:e}})}async addAgentPool(e){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}",body:e})}async deleteAgentPool(e){return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}",routeValues:{poolId:e}})}async getAgentPool(e,t,s){const r={properties:t&&t.join(","),actionFilter:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}",routeValues:{poolId:e},queryParams:r})}async getAgentPools(e,t,s,r){const o={poolName:e,properties:t&&t.join(","),poolType:s,actionFilter:r};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}",queryParams:o})}async getAgentPoolsByIds(e,t){const s={poolIds:e&&e.join(","),actionFilter:t};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/pools/{poolId}",queryParams:s})}async updateAgentPool(e,t){return this.beginRequest({apiVersion:"5.0",method:"PATCH",routeTemplate:"_apis/distributedtask/pools/{poolId}",routeValues:{poolId:t},body:e})}async addAgentQueue(e,t,s){const r={authorizePipelines:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:t},queryParams:r,body:e})}async createTeamProject(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:e}})}async deleteAgentQueue(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:t,queueId:e}})}async getAgentQueue(e,t,s){const r={actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:t,queueId:e},queryParams:r})}async getAgentQueues(e,t,s){const r={queueName:t,actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:e},queryParams:r})}async getAgentQueuesByIds(e,t,s){const r={queueIds:e&&e.join(","),actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:t},queryParams:r})}async getAgentQueuesByNames(e,t,s){const r={queueNames:e&&e.join(","),actionFilter:s};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/queues/{queueId}",routeValues:{project:t},queryParams:r})}async getAgentCloudRequests(e){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/agentclouds/{agentCloudId}/requests/{agentCloudRequestId}",routeValues:{agentCloudId:e}})}async getResourceLimits(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/resourcelimits"})}async getResourceUsage(e,t,s){const r={parallelismTag:e,poolIsHosted:t,includeRunningRequests:s};return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"_apis/distributedtask/resourceusage",queryParams:r})}async getTaskGroupHistory(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}/revisions",routeValues:{project:e,taskGroupId:t}})}async deleteSecureFile(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e,secureFileId:t}})}async downloadSecureFile(e,t,s,r){const o={ticket:s,download:r};return this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"application/octet-stream",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e,secureFileId:t},queryParams:o})}async getSecureFile(e,t,s,r){const o={includeDownloadTicket:s,actionFilter:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e,secureFileId:t},queryParams:o})}async getSecureFiles(e,t,s,r){const o={namePattern:t,includeDownloadTickets:s,actionFilter:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e},queryParams:o})}async getSecureFilesByIds(e,t,s,r){const o={secureFileIds:t&&t.join(","),includeDownloadTickets:s,actionFilter:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e},queryParams:o})}async getSecureFilesByNames(e,t,s,r){const o={secureFileNames:t&&t.join(","),includeDownloadTickets:s,actionFilter:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:e},queryParams:o})}async querySecureFilesByProperties(e,t,s){const r={namePattern:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:t},queryParams:r,body:e})}async updateSecureFile(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:t,secureFileId:s},body:e})}async updateSecureFiles(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:t},body:e})}async uploadSecureFile(e,t,s,r){const o={name:s,authorizePipelines:r};return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/securefiles/{secureFileId}",routeValues:{project:t},customHeaders:{"Content-Type":"application/octet-stream"},queryParams:o,body:e,isRawData:!0})}async executeServiceEndpointRequest(e,t,s){const r={endpointId:s};return this.beginRequest({apiVersion:"5.0-preview.2",method:"POST",routeTemplate:"{project}/_apis/distributedtask/serviceendpointproxy",routeValues:{project:t},queryParams:r,body:e})}async queryServiceEndpoint(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"POST",routeTemplate:"{project}/_apis/distributedtask/serviceendpointproxy",routeValues:{project:t},body:e})}async createServiceEndpoint(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"POST",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:t},body:e})}async deleteServiceEndpoint(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:e,endpointId:t}})}async getServiceEndpointDetails(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:e,endpointId:t}})}async getServiceEndpoints(e,t,s,r,o){const i={type:t,authSchemes:s&&s.join(","),endpointIds:r&&r.join(","),includeFailed:o};return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:e},queryParams:i})}async getServiceEndpointsByNames(e,t,s,r,o){const i={endpointNames:t&&t.join(","),type:s,authSchemes:r&&r.join(","),includeFailed:o};return this.beginRequest({apiVersion:"5.0-preview.2",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:e},queryParams:i})}async updateServiceEndpoint(e,t,s,r){const o={operation:r};return this.beginRequest({apiVersion:"5.0-preview.2",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:t,endpointId:s},queryParams:o,body:e})}async updateServiceEndpoints(e,t){return this.beginRequest({apiVersion:"5.0-preview.2",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/serviceendpoints/{endpointId}",routeValues:{project:t},body:e})}async getServiceEndpointTypes(e,t){const s={type:e,scheme:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/serviceendpointtypes",queryParams:s})}async createAgentSession(e,t){return this.beginRequest({apiVersion:"5.0",method:"POST",routeTemplate:"_apis/distributedtask/pools/{poolId}/sessions/{sessionId}",routeValues:{poolId:t},body:e})}async deleteAgentSession(e,t){return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/pools/{poolId}/sessions/{sessionId}",routeValues:{poolId:e,sessionId:t}})}async addDeploymentTarget(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:t,deploymentGroupId:s},body:e})}async deleteDeploymentTarget(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:e,deploymentGroupId:t,targetId:s}})}async getDeploymentTarget(e,t,s,r){const o={$expand:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:e,deploymentGroupId:t,targetId:s},queryParams:o})}async getDeploymentTargets(e,t,s,r,o,i,a,n,u,p,d,l){const c={tags:s&&s.join(","),name:r,partialNameMatch:o,$expand:i,agentStatus:a,agentJobResult:n,continuationToken:u,$top:p,enabled:d,propertyFilters:l&&l.join(",")};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:e,deploymentGroupId:t},queryParams:c})}async replaceDeploymentTarget(e,t,s,r){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:t,deploymentGroupId:s,targetId:r},body:e})}async updateDeploymentTarget(e,t,s,r){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:t,deploymentGroupId:s,targetId:r},body:e})}async updateDeploymentTargets(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/deploymentgroups/{deploymentGroupId}/targets/{targetId}",routeValues:{project:t,deploymentGroupId:s},body:e})}async addTaskGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:t},body:e})}async deleteTaskGroup(e,t,s){const r={comment:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:e,taskGroupId:t},queryParams:r})}async getTaskGroup(e,t,s,r){const o={versionSpec:s,$expand:r};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:e,taskGroupId:t},queryParams:o})}async getTaskGroupRevision(e,t,s){const r={revision:s};return this.beginRequest({apiVersion:"5.0-preview.1",httpResponseType:"text/plain",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:e,taskGroupId:t},queryParams:r})}async getTaskGroups(e,t,s,r,o,i,a,n){const u={expanded:s,taskIdFilter:r,deleted:o,$top:i,continuationToken:a,queryOrder:n};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:e,taskGroupId:t},queryParams:u})}async publishPreviewTaskGroup(e,t,s,r){const o={disablePriorVersions:r};return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:t,taskGroupId:s},queryParams:o,body:e})}async publishTaskGroup(e,t,s){const r={parentTaskGroupId:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:t},queryParams:r,body:e})}async undeleteTaskGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:t},body:e})}async updateTaskGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/taskgroups/{taskGroupId}",routeValues:{project:t,taskGroupId:s},body:e})}async deleteTaskDefinition(e){return this.beginRequest({apiVersion:"5.0",method:"DELETE",routeTemplate:"_apis/distributedtask/tasks/{taskId}/{versionString}",routeValues:{taskId:e}})}async getTaskContentZip(e,t,s,r){const o={visibility:s,scopeLocal:r};return this.beginRequest({apiVersion:"5.0",httpResponseType:"application/zip",routeTemplate:"_apis/distributedtask/tasks/{taskId}/{versionString}",routeValues:{taskId:e,versionString:t},queryParams:o})}async getTaskDefinition(e,t,s,r){const o={visibility:s,scopeLocal:r};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/tasks/{taskId}/{versionString}",routeValues:{taskId:e,versionString:t},queryParams:o})}async getTaskDefinitions(e,t,s){const r={visibility:t,scopeLocal:s};return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/tasks/{taskId}/{versionString}",routeValues:{taskId:e},queryParams:r})}async updateAgentUpdateState(e,t,s){const r={currentState:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}/updates",routeValues:{poolId:e,agentId:t},queryParams:r})}async updateAgentUserCapabilities(e,t,s){return this.beginRequest({apiVersion:"5.0",method:"PUT",routeTemplate:"_apis/distributedtask/pools/{poolId}/agents/{agentId}/usercapabilities",routeValues:{poolId:t,agentId:s},body:e})}async addVariableGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:t},body:e})}async deleteVariableGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:e,groupId:t}})}async getVariableGroup(e,t){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:e,groupId:t}})}async getVariableGroups(e,t,s,r,o,i){const a={groupName:t,actionFilter:s,$top:r,continuationToken:o,queryOrder:i};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:e},queryParams:a})}async getVariableGroupsById(e,t){const s={groupIds:t&&t.join(",")};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:e},queryParams:s})}async updateVariableGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PUT",routeTemplate:"{project}/_apis/distributedtask/variablegroups/{groupId}",routeValues:{project:t,groupId:s},body:e})}async querySharedProjectsForVariableGroup(e,t){const s={project:t};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/variablegroupshare/{groupId}",routeValues:{groupId:e},queryParams:s})}async shareVariableGroupWithProject(e,t,s){const r={fromProject:t,withProject:s};return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/variablegroupshare/{groupId}",routeValues:{groupId:e},queryParams:r})}async addVirtualMachineGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}",routeValues:{project:t,environmentId:s},body:e})}async deleteVirtualMachineGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}",routeValues:{project:e,environmentId:t,resourceId:s}})}async getVirtualMachineGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}",routeValues:{project:e,environmentId:t,resourceId:s}})}async updateVirtualMachineGroup(e,t,s){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}",routeValues:{project:t,environmentId:s},body:e})}async getVirtualMachines(e,t,s,r,o,i,a,n){const u={continuationToken:r,name:o,partialNameMatch:i,tags:a&&a.join(","),$top:n};return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}/virtualmachines",routeValues:{project:e,environmentId:t,resourceId:s},queryParams:u})}async updateVirtualMachines(e,t,s,r){return this.beginRequest({apiVersion:"5.0-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/distributedtask/environments/{environmentId}/providers/virtualmachinegroups/{resourceId}/virtualmachines",routeValues:{project:t,environmentId:s,resourceId:r},body:e})}async acquireAccessToken(e){return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/serviceendpointproxy/vstsaadoauth",body:e})}async createAadOAuthRequest(e,t,s,r,o){const i={tenantId:e,redirectUri:t,promptOption:s,completeCallbackPayload:r,completeCallbackByAuthCode:o};return this.beginRequest({apiVersion:"5.0-preview.1",method:"POST",routeTemplate:"_apis/distributedtask/serviceendpointproxy/vstsaadoauth",queryParams:i})}async getVstsAadTenantId(){return this.beginRequest({apiVersion:"5.0-preview.1",routeTemplate:"_apis/distributedtask/serviceendpointproxy/vstsaadoauth"})}async getYamlSchema(){return this.beginRequest({apiVersion:"5.0",routeTemplate:"_apis/distributedtask/yamlschema"})}},options:{resourceAreaId:"a85b8835-c1a1-4aac-ae97-1c3d0ba72dbd",serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}("RestClientTaskAgent"),function(e){var r;t.Linking={},Object.defineProperty(t,"__esModule",{value:!0}),function(e){e.AgentPools="ms.vss-build-web.agent-pools-route"}(r||(r={}));s.Services.add("IDistributedLinkingService",{serviceFactory:class extends s.VssService{getAgentPoolUrl(e,t){let s=o.routeUrl(this.pageContext,r.AgentPools,{});return s+=`?poolId=${e}`,t&&(s+=`&agentId=${t}`),s}}})}()},["RestClient/TaskAgent","Linking"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-distributedtask-web.client-library"}}));