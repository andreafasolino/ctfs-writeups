"use strict";define("Test/TestSummary",["require","exports","react","VSSUI/Util","VSS/Platform/Layout","VSSUI/Icon","VSSUI/VssIcon","VSS/Core/Util/String","VSSUI/TooltipEx","Test/common-util/Common","VSS/Reflux/Action","Test/common-util/Common.Utils","VSS/Reflux/Store","Test/common-util/Telemetry","Test/common-util/TelemetryConstants","VSS/Platform/Components/FPSLink","VSS/Platform/Feature","Test/common-util/TCMPerfScenarios","VSSUI/Accordion"],function(e,t,s,a,r,n,o,i,u,l,c,d,m,h,g,p,C,T,S){var y,_,f,R,P,b,v,D,N,x;y=t.Resources={},Object.defineProperty(t,"__esModule",{value:!0}),t.Resources.RunDurationHeading="Run duration",t.Resources.TestsNotReportedHeading="Tests not reported",t.Resources.TotalTestsText="Total tests",t.Resources.PassPercentHeading="Pass percentage",t.Resources.ErrorFetchingResults="Error occurred while trying to fetch test results data.",t.Resources.TestSummaryTitle="Summary",t.Resources.ResultStateInProgress="InProgress",t.Resources.CommaSeparator=",",t.Resources.TestRunStateCompleted="Test Run Completed",t.Resources.TestRunStateAborted="Test Run Aborted",t.Resources.TestOutcome_NotExecuted="Not executed",t.Resources.ResultStateNotImpacted="Not Impacted",t.Resources.OthersText="Others",t.Resources.TestOutcome_Passed="Passed",t.Resources.TestOutcome_Failed="Failed",t.Resources.TestOutcome_Aborted="Aborted",t.Resources.TestOutcome_Inconclusive="Inconclusive",t.Resources.TestOutcome_None="None",t.Resources.RunsAborted="Run(s) Aborted",t.Resources.TotalTestsHeading="Total tests",t.Resources.FailedTestsHeading="Failed tests",t.Resources.ExistingFailuresLegendText="Existing",t.Resources.PassedText="Passed",t.Resources.FailedText="Failed",t.Resources.PartiallySucceededText="Partially succeeded",t.Resources.PassedOnRerunLegendText="Passed on rerun ({0})",t.Resources.NewFailuresLegendText="New",t.Resources.NotImpactedLegendText="Not Impacted",t.Resources.RunsSummaryStatus="{0} Run(s) Completed ( {1} Passed, {2} Failed )",t.Resources.RunsSummaryStatusWithImpactedAndOtherRuns="{0} Run(s) Completed ( {1} Passed, {2} Failed, {3} Not impacted, {4} Others )",t.Resources.RunsSummaryStatusWithImpactedRunsOnly="{0} Run(s) Completed ( {1} Passed, {2} Failed, {3} Not impacted )",t.Resources.RunsSummaryStatusWithOtherRunsOnly="{0} Run(s) Completed ( {1} Passed, {2} Failed, {3} Others )",t.Resources.TestsTabInBuild="Tests",t.Resources.BuildDoesNotHaveTestReports="No test runs are available for this build. Run tests and get rich reports by using an appropriate built-in task such as the <a class='bolt-link' href='https://go.microsoft.com/fwlink/?linkid=835764' rel='nofollow noopener noreferrer' target='_blank'>Visual Studio Test task</a>. Alternately, run tests using a runner of your choice such as <a class='bolt-link' href='https://junit.org' rel='nofollow noopener noreferrer' target='_blank'>JUnit</a>, <a class='bolt-link' href='https://xunit.github.io/' rel='nofollow noopener noreferrer' target='_blank'>xUnit</a>, <a class='bolt-link' href='https://go.microsoft.com/fwlink/?linkid=2081227' rel='nofollow noopener noreferrer' target='_blank'>mocha, jest, </a><a class='bolt-link' href='https://go.microsoft.com/fwlink/?linkid=2081228' rel='nofollow noopener noreferrer' target='_blank'>pytest, </a><a class='bolt-link' href='https://go.microsoft.com/fwlink/?linkid=2080895' rel='nofollow noopener noreferrer' target='_blank'>rspec, </a>etc. and use the <a class='bolt-link' href='https://go.microsoft.com/fwlink/?LinkId=857107' rel='nofollow noopener noreferrer' target='_blank'>Publish Test Results</a> task to get rich reports.",t.Resources.BuildDetailsSummaryNoTestRuns="No test runs are available for this build. <br>",t.Resources.NoTestsMessageWhileBuildInProgress="Build is in progress. No tests results available at this stage!",t.Resources.BuildHasNotCompletedText="The build is in progress. Test results will appear here when the build completes.",t.Resources.BuildDeletedNoTestResults="No test runs are available for this build as this build has been deleted.",t.Resources.Runs="Runs",t.Resources.NoTestResultsMessage="Test results are not yet available.",t.Resources.RunDurationInfoMessage="Effective run duration for all tests",t.Resources.TestAnalyticsLinkMessage="{0} unique failing {1} in the last 14 days",t.Resources.TestPluralText="tests",t.Resources.TestSingularText="test",function(e){_=t.ComponentsDonutChartLegend={},Object.defineProperty(t,"__esModule",{value:!0});t.ComponentsDonutChartLegend.DonutChartLegendComponent=class extends r.VssComponent{render(){let e=[],t=[],r=[];return this.props.legend.forEach(a=>{e.push(s.createElement("div",{key:a.label,className:"legend-cell data-count"},a.count)),t.push(s.createElement("div",{key:a.label,className:"legend-cell data-color"},this._getLegendCircleElement(a.color))),r.push(s.createElement("div",{key:a.label,className:"legend-cell data-value"},a.label)),a.sublabel&&(e.push(s.createElement("div",{key:a.sublabel,className:"legend-sub-cell data-count"})),t.push(s.createElement("div",{key:a.sublabel,className:"legend-sub-cell data-color"})),r.push(s.createElement("div",{key:a.sublabel,className:"legend-sub-cell data-value"},a.sublabel)))}),s.createElement("div",{className:a.css("donut-legend-container",this.props.cssClass||"")},s.createElement("div",null,e),s.createElement("div",null,t),s.createElement("div",null,r))}_getLegendCircleElement(e){return s.createElement("span",{className:"legend-circle"},s.createElement("svg",{width:"14px",height:"14px"},s.createElement("circle",{className:"color-circle",cx:"7",cy:"7",r:"7",fill:e})))}}}(),function(e){var a,l,c;f=t[e]={},Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.Improved=0]="Improved",e[e.Worsened=1]="Worsened",e[e.Unchanged=2]="Unchanged"}(a=t[e].DifferenceType||(t[e].DifferenceType={})),function(e){e[e.Increased=0]="Increased",e[e.Unchanged=1]="Unchanged",e[e.Decreased=2]="Decreased"}(l=t[e].ValueType||(t[e].ValueType={})),function(e){e[e.String=0]="String",e[e.Percentage=1]="Percentage",e[e.DateTime=2]="DateTime"}(c=t[e].DataType||(t[e].DataType={}));t[e].ResultSummaryNumberChartComponent=class extends r.VssComponent{render(){return s.createElement("div",{className:"testresults-number-chart"},s.createElement("div",{className:"chart-value"},this._getChartValueDiv()),s.createElement("div",{className:"chart-title"},s.createElement("span",null,this.props.title),this.props.infoMessage&&this._getInfoMessageButton()),s.createElement("div",{className:`chart-difference ${this.props.isVerticalAlignWithDifferencePresent?"chart-difference-show-height":"chart-difference-no-height"}`},this.props.difference&&this._getDifferenceDiv()))}_getChartValueDiv(){if(null===this.props.dataType)return this.props.value;switch(this.props.dataType){case c.String:return this.props.value;case c.Percentage:return this._getPercentageValueDiv();case c.DateTime:default:return this.props.value}}_getPercentageValueDiv(){return s.createElement("div",null,s.createElement("span",{className:"number-chart-large-font"},i.localeFormat("{0}{1}",this.props.value,"%")))}_getInfoMessageButton(){return s.createElement(u.Tooltip,{text:this.props.infoMessage},n.Icon({className:"number-chart-info-message-button cursor-pointer",ariaLabel:this.props.infoMessage,iconName:"Info"}))}_getDifferenceDiv(){if(null===this.props.difference)return s.createElement("div",null);let e;switch(this.props.difference.diffType){case a.Improved:e="difference-improved";break;case a.Unchanged:e="difference-unchanged";break;case a.Worsened:e="difference-worsened";break;default:e=""}return s.createElement("div",{className:`${e} chart-difference`},this.props.difference.shouldShowIcon&&this._getIconDiv(),this.props.difference.valueType!==l.Unchanged&&s.createElement("div",{className:"difference-value"},this.props.difference.value))}_getIconDiv(){let e;if(!this.props.difference)return null;switch(this.props.difference.valueType){case l.Unchanged:return null;case l.Increased:e="Up";break;case l.Decreased:e="Down";break;default:return null}return s.createElement("div",{className:"difference-icon-div"},s.createElement(o.VssIcon,{iconName:e}))}}}("ComponentsResultSummaryDetailsChart"),function(e){R=t.ComponentsTestAnalyticsLink={},Object.defineProperty(t,"__esModule",{value:!0}),t.ComponentsTestAnalyticsLink.getTestAnalyticsLinkData=async function(e,t,s){let a=e.pageContext.getService("IVssContributionService");await a.getContributionAsync("ms.vss-test-analytics-web.failed-tests-metric-view");let r,n=e.pageContext.getService("FailedTestsSourceService");return n&&n.initialize("FailedTestsSourceService",e.pageContext),r=t===l.ViewContext.Build?{contextType:1,definitionId:s}:{contextType:2,definitionId:s},n.getTestAnalyticsLinkData(r)}}(),function(e){t.ActionsTestResultsReportActionsHub={},Object.defineProperty(t,"__esModule",{value:!0});t.ActionsTestResultsReportActionsHub.TestResultsReportActionsHub=class{constructor(){this.initializeTestResultSummary=new c.Action,this.refreshTestResultSummary=new c.Action,this.onSummaryLoaded=new c.Action}}}(),function(e){P=t.StoreSummaryViewStore={},Object.defineProperty(t,"__esModule",{value:!0});t.StoreSummaryViewStore.SummaryViewStore=class extends m.Store{constructor(e,t,s,a){super(e),this.pageContext=t,this._actionsHub=s,this._viewContextData=a,this._actionsHub.initializeTestResultSummary.addListener(this._initializeTestResultSummaryHandler.bind(this)),this._actionsHub.refreshTestResultSummary.addListener(this._refreshSummary.bind(this)),this._initialize()}_initialize(){this._setDefaultState()}getState(){return this._state}dispose(){this._actionsHub.initializeTestResultSummary.removeListener(this._initializeTestResultSummaryHandler),this._actionsHub.refreshTestResultSummary.removeListener(this._refreshSummary)}getDefinitionId(){if(this._viewContextData.viewContext==l.ViewContext.Build)return this._viewContextData.data.mainData.definition.id;{let e=0;return this._viewContextData&&this._viewContextData.data&&this._viewContextData.data.subData&&this._viewContextData.data.subData.environment&&this._viewContextData.data.subData.environment.releaseDefinition&&(e=this._viewContextData.data.subData.environment.releaseDefinition.id),e}}_setDefaultState(){this._state={shouldShowSummary:!1,totalTestsNumberChartProps:null,totalAbortedTestsNumberChartProps:null,totalTestsChartProps:null,testFailuresChartProps:null,abortedTestsChartProps:null,passPercentageNumberChartProps:null,runDurationNumberChartProps:null,notReportedNumberChartProps:null,errorMessage:null,isInProgressView:null,aggregatedTestsCount:null,aggregatedRunsCount:null,aggregatedRunsOutcomeCount:null,refreshSummary:!1,testAnalyticsLinkData:{}}}_refreshSummary(){this._state.refreshSummary=!0,this.emitChanged()}_initializeTestResultSummary(e){this._state.isInProgressView=e.viewContextStatus===l.ViewContextStatus.InProgress,e.summaryData&&e.summaryData.testResultsContext&&e.summaryData.testResultsContext.contextType,this._state.isInProgressView?this._initializeTestResultSummaryForInProgressView(e.summaryData):this._initializeTestResultSummaryForCompletedView(e.summaryData)}_initializeTestResultSummaryHandler(e){this._initializeTestResultSummary(e),this._state.refreshSummary=!1,this.emitChanged()}_initializeTestResultSummaryForInProgressView(e){let t=0,s=0,a=0,r=0,n=0,o=0,i=0,u=0,l=0,c=0,d=0,m=0;if(e&&e.aggregatedResultsAnalysis&&e.aggregatedResultsAnalysis.runSummaryByState){const h=e.aggregatedResultsAnalysis.runSummaryByState;l=h[2]?h[2].runsCount:0,c=h[3]?h[3].runsCount:0,d=h[6]?h[6].runsCount:0,m=h[4]?h[4].runsCount:0;for(let e of Object.keys(h)){u+=h[parseInt(e)].runsCount;const i=h[parseInt(e)].resultsByOutcome;i&&(t+=this._getAggregatedCount(i),s+=i[2]?i[2].count:0,a+=i[3]?i[3].count:0,r+=i[14]?i[14].count:0,n+=i[8]?i[8].count:0,o+=i[6]?i[6].count:0)}u>0&&(this._state.shouldShowSummary=!0),i=t-s-a-r-n-o}this._state.aggregatedRunsCount={totalRuns:u,inProgressRuns:l,completedRuns:c+d,abortedRuns:m},this._state.aggregatedTestsCount={totalTests:t,passedTests:s,failedTests:a,notImpactedTests:r,notExecutedTests:n,abortedTests:o,otherTests:i}}_initializeTestResultSummaryForCompletedView(e){let t=0,s=0,a=0,r=0,n=0,o="",i=0,u=0,l=0,c=0,m=0,h=0,g=0,p="",C=0,T=0,S=0,_=0,f=0,R=0,P=0,b=0,v=0,D=0,N=0,x=0,w=0;if(e&&e.aggregatedResultsAnalysis){const y=e.aggregatedResultsAnalysis.resultsByOutcome;if(Object.keys(y).length>0&&(this._state.shouldShowSummary=!0),s=this._getAggregatedCount(y),_=e.aggregatedResultsAnalysis.totalTests,c=this._getAggregatedCount(e.aggregatedResultsAnalysis.notReportedResultsByOutcome),e.aggregatedResultsAnalysis.runSummaryByState&&e.aggregatedResultsAnalysis.runSummaryByState[4]&&(this._state.shouldShowSummary=!0,t=e.aggregatedResultsAnalysis.runSummaryByState[4].runsCount),y&&y[3]&&(C=y[3].count),e.testFailures){const t=d.TestReportDataParser.parseFailureData(e.testFailures);l=t.newFailures,r=t.existingFailures}else r=C;if(y&&y[2]&&(S=y[2].count,y[2].rerunResultCount&&(h=y[2].rerunResultCount)),_&&(g=S/_*100),e.aggregatedResultsAnalysis.resultsByOutcome[14]&&(T=e.aggregatedResultsAnalysis.resultsByOutcome[14].count),m=s-(S+C+T),p=e.aggregatedResultsAnalysis.duration,e.aggregatedResultsAnalysis.resultsDifference){const t=e.aggregatedResultsAnalysis.resultsDifference;u=t.increaseInOtherTests+t.increaseInFailures+t.increaseInPassedTests,o=t.increaseInDuration,i=t.increaseInFailures,e.testFailures&&(n=this._getIncreaseInPassPercentageDifference(S,g,e.aggregatedResultsAnalysis))}if(e.aggregatedResultsAnalysis.runSummaryByState){const t=e.aggregatedResultsAnalysis.runSummaryByState;a=t[3]?t[3].runsCount:0}if(e.aggregatedResultsAnalysis.runSummaryByOutcome){const t=e.aggregatedResultsAnalysis.runSummaryByOutcome;f=t[0]?t[0].runsCount:0,R=t[1]?t[1].runsCount:0,P=t[2]?t[2].runsCount:0,b=t[3]?t[3].runsCount:0}}const E=!!e.aggregatedResultsAnalysis.resultsDifference;this._state.totalTestsNumberChartProps=this._getTotalTestsNumberChartProps(s,u,E),this._state.passPercentageNumberChartProps=this._getPassPercentageNumberChartProps(g,n,E);const I=d.TestReportDataParser.parseDuration(p);this._state.runDurationNumberChartProps={title:y.RunDurationHeading,value:I,difference:E?this._getDurationDifference(o):null,infoMessage:y.RunDurationInfoMessage},this._state.notReportedNumberChartProps={title:y.TestsNotReportedHeading,value:c.toLocaleString(),difference:this._getNullDifference()},this._state.aggregatedRunsOutcomeCount={passed:f,failed:R,notImpacted:P,others:b},this._state.totalTestsChartProps={aggregatedtotalTests:s,totalPassed:S,totalPassedOnRerun:h,totalFailures:C,totalNotImpactedTests:T,otherTests:m};const A=!!e.testFailures;if(this._state.testFailuresChartProps=A?{totalFailures:C,newFailures:l,existingFailures:r,increaseInFailures:i}:null,this._state.aggregatedRunsCount={totalRuns:0,inProgressRuns:0,completedRuns:a,abortedRuns:t},t>0){const t=e.aggregatedResultsAnalysis.runSummaryByState[4].resultsByOutcome;t&&(v=this._getAggregatedCount(t),D=t[2]?t[2].count:0,N=t[3]?t[3].count:0,w=t[6]?t[6].count:0,m=v-D-N-(x=t[14]?t[14].count:0)-w),this._state.totalAbortedTestsNumberChartProps=this._getTotalAbortedTestsNumberChartProps(v),this._state.abortedTestsChartProps={totalTests:v,totalPassed:D,totalFailures:N,totalAborted:w,totalNotImpactedTests:x,otherTests:m}}}_getTotalTestsNumberChartProps(e,t,s){return{title:y.TotalTestsText,value:e.toLocaleString(),difference:s?this._getTotalTestsDifference(t):null,dataType:f.DataType.String}}_getTotalAbortedTestsNumberChartProps(e){return{title:y.TotalTestsText,value:e.toLocaleString(),difference:null,dataType:f.DataType.String}}_getTotalTestsDifference(e){let t,s;return e<0?(t=i.localeFormat("{0}",e.toLocaleString()),s=f.ValueType.Decreased):e>0?(t=i.localeFormat("+{0}",e.toLocaleString()),s=f.ValueType.Increased):(t=i.localeFormat("+{0}",e.toLocaleString()),s=f.ValueType.Unchanged),{diffType:f.DifferenceType.Unchanged,shouldShowIcon:!1,value:t,valueType:s}}_getPassPercentageNumberChartProps(e,t,s){const a=e===Math.round(e)?e.toString():d.TestReportDataParser.getCustomizedDecimalValueInCurrentLocale(e,2);return this._getPassPercentageDifference(t),{title:y.PassPercentHeading,value:a,difference:s?this._getPassPercentageDifference(t):null,dataType:f.DataType.Percentage}}_getPassPercentageDifference(e){let t,s;const a=Math.abs(e),r=a===Math.round(a)?a.toString():d.TestReportDataParser.getCustomizedDecimalValueInCurrentLocale(a,1),n=i.localeFormat("{0}{1}",r,"%");return e<0?(t=f.ValueType.Decreased,s=f.DifferenceType.Worsened):e>0?(t=f.ValueType.Increased,s=f.DifferenceType.Improved):(t=f.ValueType.Unchanged,s=f.DifferenceType.Unchanged),{diffType:s,shouldShowIcon:!0,value:n,valueType:t}}_getDurationDifference(e){let t;return t=d.TestReportDataParser.isZeroDuration(e)?{value:i.localeFormat("{0}",0),diffType:f.DifferenceType.Unchanged,valueType:f.ValueType.Unchanged,shouldShowIcon:!0}:i.startsWith(e,"-")?{value:i.localeFormat("{0}",d.TestReportDataParser.parseDuration(e)),diffType:f.DifferenceType.Improved,valueType:f.ValueType.Decreased,shouldShowIcon:!0}:{value:i.localeFormat("+{0}",d.TestReportDataParser.parseDuration(e)),diffType:f.DifferenceType.Worsened,valueType:f.ValueType.Increased,shouldShowIcon:!0}}_getIncreaseInPassPercentageDifference(e,t,s){const a=s.totalTests-s.resultsDifference.increaseInTotalTests,r=e-s.resultsDifference.increaseInPassedTests;let n=0;return 0!==a&&(n=r/a*100),t-n}_getNullDifference(){return{value:"",diffType:f.DifferenceType.Unchanged,valueType:f.ValueType.Unchanged,shouldShowIcon:!1}}_getAggregatedCount(e){let t=0;if(e)for(const s of Object.keys(e))t+=e[parseInt(s)].count;return t}}}(),function(e){b=t.ComponentsCompletedSummaryView={},Object.defineProperty(t,"__esModule",{value:!0});class a extends r.VssComponent{constructor(e){super(e),this.state={},this._chartDiameter=100}componentDidMount(){R.getTestAnalyticsLinkData(this.context,this.props.artifactData.viewContext,this.props.store.getDefinitionId()).then(e=>{this._currentState.testAnalyticsLinkData=e,this.setState(this._currentState)}),this._logTelemetryForClick()}shouldComponentUpdate(e,t){return JSON.stringify(this.state)!==JSON.stringify(t)}render(){return this.props.store&&(this._currentState=this.props.store.getState()),this._getCompletedSummaryViewBody()}_logTelemetryForClick(){let e=this.props.isBuildTimeline?g.featureTestTab_summaryInBuildTimelineRendered:g.featureTestTab_TestTabClicked;this._currentState.totalTestsChartProps&&h.publishEvent(this.context.pageContext,this.props.artifactData,e,{[g.inProgress]:!1,[g.totalTestsExists]:this._currentState.totalTestsChartProps.aggregatedtotalTests>0?"Yes":"No",[g.failedTestsExists]:this._currentState.totalTestsChartProps.totalFailures>0?"Yes":"No",[g.totalTests]:this._currentState.totalTestsChartProps.aggregatedtotalTests,[g.failedTests]:this._currentState.totalTestsChartProps.totalFailures,[g.passedTests]:this._currentState.totalTestsChartProps.totalPassed})}_getSummaryText(){return null!==this._currentState.aggregatedRunsOutcomeCount&&null!==this._currentState.aggregatedRunsCount?0!==this._currentState.aggregatedRunsOutcomeCount.notImpacted&&0!==this._currentState.aggregatedRunsOutcomeCount.others?i.localeFormat(y.RunsSummaryStatusWithImpactedAndOtherRuns,this._currentState.aggregatedRunsCount.completedRuns,this._currentState.aggregatedRunsOutcomeCount.passed,this._currentState.aggregatedRunsOutcomeCount.failed,this._currentState.aggregatedRunsOutcomeCount.notImpacted,this._currentState.aggregatedRunsOutcomeCount.others):0!==this._currentState.aggregatedRunsOutcomeCount.notImpacted&&0===this._currentState.aggregatedRunsOutcomeCount.others?i.localeFormat(y.RunsSummaryStatusWithImpactedRunsOnly,this._currentState.aggregatedRunsCount.completedRuns,this._currentState.aggregatedRunsOutcomeCount.passed,this._currentState.aggregatedRunsOutcomeCount.failed,this._currentState.aggregatedRunsOutcomeCount.notImpacted):0===this._currentState.aggregatedRunsOutcomeCount.notImpacted&&0!==this._currentState.aggregatedRunsOutcomeCount.others?i.localeFormat(y.RunsSummaryStatusWithImpactedAndOtherRuns,this._currentState.aggregatedRunsCount.completedRuns,this._currentState.aggregatedRunsOutcomeCount.passed,this._currentState.aggregatedRunsOutcomeCount.failed,this._currentState.aggregatedRunsOutcomeCount.others):i.localeFormat(y.RunsSummaryStatus,this._currentState.aggregatedRunsCount.completedRuns,this._currentState.aggregatedRunsOutcomeCount.passed,this._currentState.aggregatedRunsOutcomeCount.failed):""}_getCompletedSummaryViewBody(){const e=C.isFeatureFlagEnabled(this.context.pageContext,l.FeatureFlagConstants.TriReportCustomization,!1),t=this._isAnyDifferenceValuePresentInNumberCharts();return s.createElement("div",{className:"summary-view-parent"},this._currentState&&this._currentState.aggregatedRunsCount&&this._currentState.aggregatedRunsCount.completedRuns>0&&s.createElement("div",{className:"summary-view-container"},this._currentState.aggregatedRunsCount&&this._currentState.aggregatedRunsCount.completedRuns>0&&this._currentState.aggregatedRunsOutcomeCount&&s.createElement("div",{className:"summary-view-runs-info-bar"},s.createElement("div",{className:"summary-view-completed-runs"},this._getSummaryText(),this.state.testAnalyticsLinkData&&this.state.testAnalyticsLinkData.testAnalyticsLinkMessage&&!this.props.isBuildTimeline&&s.createElement(p.FPSLinkComponent,{className:"failing-test-analytics-link",href:this.state.testAnalyticsLinkData.testAnalyticsLink,telemetrySource:g.featureAnalyticsInProductLink_UniqueFailingTests_TestTab,telemetryProperties:this.props.telemetryPropertiesForInProductLink},this.state.testAnalyticsLinkData.testAnalyticsLinkMessage))),s.createElement("div",{className:"summary-view-body"},this._currentState&&this._currentState.totalTestsNumberChartProps&&s.createElement(f.ResultSummaryNumberChartComponent,Object.assign({},this._currentState.totalTestsNumberChartProps,{isVerticalAlignWithDifferencePresent:t})),this._currentState&&s.createElement("div",{className:"separator"}),this._currentState&&this._currentState.totalTestsChartProps&&this._getTotalTestsChart(),this._currentState&&this._currentState.testFailuresChartProps&&this._currentState.testFailuresChartProps.totalFailures>0&&this._getFailedTestsChart(),this._currentState&&this._currentState.passPercentageNumberChartProps&&s.createElement(f.ResultSummaryNumberChartComponent,Object.assign({},this._currentState.passPercentageNumberChartProps,{isVerticalAlignWithDifferencePresent:t})),this._currentState&&this._currentState.runDurationNumberChartProps&&s.createElement(f.ResultSummaryNumberChartComponent,Object.assign({},this._currentState.runDurationNumberChartProps,{isVerticalAlignWithDifferencePresent:t})),e&&this._currentState&&this._currentState.notReportedNumberChartProps&&s.createElement(f.ResultSummaryNumberChartComponent,Object.assign({},this._currentState.notReportedNumberChartProps,{isVerticalAlignWithDifferencePresent:t})))),this._currentState&&this._currentState.aggregatedRunsCount&&this._currentState.aggregatedRunsCount.abortedRuns>0&&s.createElement("div",{className:"aborted-summary-container"},s.createElement("div",{className:"aborted-view-bar"},this._currentState&&this._currentState.aggregatedRunsCount&&this._currentState.aggregatedRunsCount.completedRuns>0&&s.createElement("div",{className:"aborted-runs-separator-in-bar"}),s.createElement("div",{className:"aborted-runs"},s.createElement("span",{className:"aborted-runs-value"}," ",this._currentState.aggregatedRunsCount.abortedRuns.toLocaleString()," "),y.RunsAborted)),s.createElement("div",{className:"aborted-view-body"},this._currentState&&this._currentState.aggregatedRunsCount&&this._currentState.aggregatedRunsCount.completedRuns>0&&s.createElement("div",{className:"aborted-runs-separator"}),this._currentState&&this._currentState.totalAbortedTestsNumberChartProps&&s.createElement(f.ResultSummaryNumberChartComponent,Object.assign({},this._currentState.totalAbortedTestsNumberChartProps,{isVerticalAlignWithDifferencePresent:t})),this._currentState&&this._currentState.abortedTestsChartProps&&this._currentState.abortedTestsChartProps.totalTests>0&&this._getAbortedTestsChart())))}_isAnyDifferenceValuePresentInNumberCharts(){let e=!1;return(this._currentState.totalTestsNumberChartProps&&this._currentState.totalTestsNumberChartProps.difference&&this._currentState.totalTestsNumberChartProps.difference.valueType!==f.ValueType.Unchanged||this._currentState.passPercentageNumberChartProps&&this._currentState.passPercentageNumberChartProps.difference&&this._currentState.passPercentageNumberChartProps.difference.valueType!==f.ValueType.Unchanged||this._currentState.runDurationNumberChartProps&&this._currentState.runDurationNumberChartProps.difference&&this._currentState.runDurationNumberChartProps.difference.valueType!==f.ValueType.Unchanged||this._currentState.totalAbortedTestsNumberChartProps&&this._currentState.totalAbortedTestsNumberChartProps.difference&&this._currentState.totalAbortedTestsNumberChartProps.difference.valueType!==f.ValueType.Unchanged||this._currentState.notReportedNumberChartProps&&this._currentState.notReportedNumberChartProps.difference&&this._currentState.notReportedNumberChartProps.difference.valueType!==f.ValueType.Unchanged)&&(e=!0),e}_getTotalTestsChart(){const e=this._getTotalTestsChartProps();let t=[];t.push({y:this._currentState.totalTestsChartProps.totalPassed,name:y.PassedText,color:l.TestReportColorPalette.Passed}),t.push({y:this._currentState.totalTestsChartProps.totalFailures,name:y.FailedText,color:l.TestReportColorPalette.Failed}),t.push({y:this._currentState.totalTestsChartProps.otherTests,name:y.OthersText,color:l.TestReportColorPalette.OtherOutcome}),t.push({y:this._currentState.totalTestsChartProps.totalNotImpactedTests,name:y.NotImpactedLegendText,color:l.TestReportColorPalette.NotImpacted});let n={width:this._chartDiameter,height:this._chartDiameter},o=[{data:t||[]}];const i=this._getDonutChartLegendProps(e);return s.createElement("div",{className:"summary-view-totaltests-chart"},s.createElement(r.WrappedComponent,{dependencies:["ms.vss-features.vss-charts-common"],wrappedType:"vss-chart",pageContext:this.context.pageContext,hostOptions:n,specializedOptions:{size:"120%",innerSize:"60%",showLabels:!1},title:y.TotalTestsHeading,chartType:"pie",series:o,suppressMargin:!0,suppressAnimation:!0,legend:{enabled:!1},xAxis:{labelFormatMode:"textual",labelValues:a._getXLables(t)}}),s.createElement(_.DonutChartLegendComponent,Object.assign({},i)))}static _getXLables(e){return e?e.map(e=>e.name||""):[]}_getFailedTestsChart(){const e=this._getFailedTestsChartProps(),t=this._getDonutChartLegendProps(e);let n=[];n.push({y:this._currentState.testFailuresChartProps.newFailures,name:y.NewFailuresLegendText,color:l.TestReportColorPalette.Failed}),n.push({y:this._currentState.testFailuresChartProps.existingFailures,name:y.ExistingFailuresLegendText,color:l.TestReportColorPalette.ExistingFailures});let o={width:this._chartDiameter,height:this._chartDiameter},i=[{name:"FailedTests",data:n||[]}];return s.createElement("div",{className:"summary-view-failedtests-chart"},s.createElement(r.WrappedComponent,{dependencies:["ms.vss-features.vss-charts-common"],wrappedType:"vss-chart",pageContext:this.context.pageContext,hostOptions:o,specializedOptions:{size:"120%",innerSize:"60%",showLabels:!1},title:y.FailedTestsHeading,chartType:"pie",series:i,suppressMargin:!0,suppressAnimation:!0,legend:{enabled:!1},xAxis:{labelFormatMode:"textual",labelValues:a._getXLables(n)}}),s.createElement("div",{className:"failure-chart-legend-area"},this._getFailureChartLabelDiv(e),s.createElement(_.DonutChartLegendComponent,Object.assign({},t))))}_getAbortedTestsChart(){const e=this._getAbortedTestsChartProps(),t=this._getDonutChartLegendProps(e);return s.createElement("div",{className:"summary-view-abortedtests-chart"},s.createElement(_.DonutChartLegendComponent,Object.assign({},t)))}_getDonutChartLegendProps(e){return{legend:e.data.map(e=>({count:e.dataCount.toLocaleString(),label:e.dataValue,color:e.dataColor,sublabel:e.dataSubText}))}}_getFailureChartLabelDiv(e){let t,a;if(!this._currentState.testFailuresChartProps)return s.createElement("div",null,'"Failure Chart props are empty."');const r=this._currentState.testFailuresChartProps.increaseInFailures;return r>0?(a="failures-increased",t=i.format("(+{0})",r.toLocaleString())):r<0?(a="failures-decreased",t=i.format("({0})",r.toLocaleString())):(a="failures-unchanged",t=""),s.createElement("div",{className:"failure-chart-label-div"},s.createElement("div",{className:"failed-chart-total-count"},e.totalCount),s.createElement("div",{className:"failed-chart-title"},e.title),s.createElement("div",{className:`${a} failed-chart-test-increment`},t.toLocaleString()))}_getTotalTestsChartProps(){const e={};return this._currentState.totalTestsChartProps?(e.title=y.TotalTestsHeading,e.totalCount=this._currentState.totalTestsChartProps.aggregatedtotalTests,e.data=[],e.data.push({dataValue:y.PassedText,dataCount:this._currentState.totalTestsChartProps.totalPassed,dataColor:l.TestReportColorPalette.Passed,dataSubText:this._currentState.totalTestsChartProps.totalPassedOnRerun>0?i.format(y.PassedOnRerunLegendText,this._currentState.totalTestsChartProps.totalPassedOnRerun):null}),e.data.push({dataValue:y.FailedText,dataCount:this._currentState.totalTestsChartProps.totalFailures,dataColor:l.TestReportColorPalette.Failed}),e.data.push({dataValue:y.OthersText,dataCount:this._currentState.totalTestsChartProps.otherTests,dataColor:l.TestReportColorPalette.OtherOutcome}),this._currentState.totalTestsChartProps.totalNotImpactedTests>0&&e.data.push({dataValue:y.NotImpactedLegendText,dataCount:this._currentState.totalTestsChartProps.totalNotImpactedTests,dataColor:l.TestReportColorPalette.NotImpacted}),e):e}_getFailedTestsChartProps(){const e={};return this._currentState.testFailuresChartProps?(e.title=y.FailedTestsHeading,e.totalCount=this._currentState.testFailuresChartProps.totalFailures,e.data=[],e.data.push({dataValue:y.NewFailuresLegendText,dataCount:this._currentState.testFailuresChartProps.newFailures,dataColor:l.TestReportColorPalette.Failed}),e.data.push({dataValue:y.ExistingFailuresLegendText,dataCount:this._currentState.testFailuresChartProps.existingFailures,dataColor:l.TestReportColorPalette.ExistingFailures}),e):e}_getAbortedTestsChartProps(){const e={data:[]};return this._currentState.abortedTestsChartProps?(e.data.push({dataValue:y.PassedText,dataCount:this._currentState.abortedTestsChartProps.totalPassed,dataColor:l.TestReportColorPalette.Passed}),e.data.push({dataValue:y.FailedText,dataCount:this._currentState.abortedTestsChartProps.totalFailures,dataColor:l.TestReportColorPalette.Failed}),e.data.push({dataValue:y.TestOutcome_Aborted,dataCount:this._currentState.abortedTestsChartProps.totalAborted,dataColor:l.TestReportColorPalette.AbortedForLegend}),e.data.push({dataValue:y.OthersText,dataCount:this._currentState.abortedTestsChartProps.otherTests,dataColor:l.TestReportColorPalette.OtherOutcome}),this._currentState.abortedTestsChartProps.totalNotImpactedTests>0&&e.data.push({dataValue:y.NotImpactedLegendText,dataCount:this._currentState.abortedTestsChartProps.totalNotImpactedTests,dataColor:l.TestReportColorPalette.NotImpacted}),e):e}}t.ComponentsCompletedSummaryView.CompletedSummaryView=a}(),function(e){v=t.ComponentsResultSummaryColoredNumberChart={},Object.defineProperty(t,"__esModule",{value:!0});t.ComponentsResultSummaryColoredNumberChart.ResultSummaryColoredNumberChartComponent=class extends r.VssComponent{render(){return s.createElement("div",{className:"testresults-colored-number-chart"},s.createElement("div",{className:"chart-value",style:{color:this.props.color}},this.props.value),s.createElement("div",{className:"chart-title-legend"},this._getLegendCircleElement(this.props.color),s.createElement("span",{className:"legend-title"},this.props.title)))}_getLegendCircleElement(e){return s.createElement("span",{className:"legend-circle"},s.createElement("svg",{width:"14px",height:"14px"},s.createElement("circle",{className:"color-circle",cx:"7",cy:"7",r:"7",fill:e})))}}}(),function(e){D=t.ComponentsInProgressSummaryView={},Object.defineProperty(t,"__esModule",{value:!0});t.ComponentsInProgressSummaryView.InProgressSummaryView=class extends r.VssComponent{constructor(e){super(e),this.state={}}componentDidMount(){R.getTestAnalyticsLinkData(this.context,this.props.artifactData.viewContext,this.props.store.getDefinitionId()).then(e=>{this._currentState.testAnalyticsLinkData=e,this.setState(this._currentState)}),this._logTelemetryForClick()}render(){return this.props.store&&(this._currentState=this.props.store.getState()),this._getInProgressSummaryViewBody()}_logTelemetryForClick(){let e=this.props.isBuildTimeline?g.featureTestTab_summaryInBuildTimelineRendered:g.featureTestTab_TestTabClicked;this._currentState.aggregatedTestsCount&&h.publishEvent(this.context.pageContext,this.props.artifactData,e,{[g.inProgress]:!0,[g.totalTestsExists]:this._currentState.aggregatedTestsCount.totalTests>0?"Yes":"No",[g.failedTestsExists]:this._currentState.aggregatedTestsCount.failedTests>0?"Yes":"No",[g.totalTests]:this._currentState.aggregatedTestsCount.totalTests,[g.failedTests]:this._currentState.aggregatedTestsCount.failedTests,[g.passedTests]:this._currentState.aggregatedTestsCount.passedTests})}_getInProgressSummaryViewBody(){if(this._currentState&&this._currentState.aggregatedRunsCount)return s.createElement("div",{className:"summary-view-container-parent"},s.createElement("div",{className:"summary-view-container-left"},s.createElement("div",{className:"summary-view-bar-left"},s.createElement("div",{className:"summary-view-bar-icon-run-count"},s.createElement(n.Icon,{iconName:"TestBeaker",className:"summary-view-test-icon"}),s.createElement("div",{className:"run-count-details"},s.createElement("span",{className:"run-count-details-count"},this._currentState.aggregatedRunsCount.totalRuns),s.createElement("span",{className:"run-count-details-name"},y.Runs))),s.createElement("div",{className:"separator-in-bar"})),s.createElement("div",{className:"inprogress-summary-view-body margin-left-side"},s.createElement(f.ResultSummaryNumberChartComponent,{title:y.TotalTestsText,value:null!=this._currentState.aggregatedTestsCount?this._currentState.aggregatedTestsCount.totalTests:0,difference:null,dataType:f.DataType.String,isVerticalAlignWithDifferencePresent:!1}),s.createElement("div",{className:"separator"}))),s.createElement("div",{className:"summary-view-container-right"},s.createElement("div",{className:"summary-view-bar-right"},s.createElement("div",{className:"inprogress-run-details"},s.createElement("span",{className:"inprogress-run-details-count"},this._currentState.aggregatedRunsCount.inProgressRuns),s.createElement("span",{className:"inprogress-run-details-name"},y.ResultStateInProgress)),!!this._currentState.aggregatedRunsCount.completedRuns&&s.createElement("div",{className:"completed-run-details"},s.createElement("span",{className:"comma"},y.CommaSeparator),s.createElement("span",{className:"completed-run-details-count"},this._currentState.aggregatedRunsCount.completedRuns),s.createElement("span",{className:"completed-run-details-name"},y.TestRunStateCompleted)),!!this._currentState.aggregatedRunsCount.abortedRuns&&s.createElement("div",{className:"aborted-run-details"},s.createElement("span",{className:"comma"},y.CommaSeparator),s.createElement("span",{className:"aborted-run-details-count",style:{color:l.TestReportColorPalette.Failed}},this._currentState.aggregatedRunsCount.abortedRuns),s.createElement("span",{className:"aborted-run-details-name"},y.TestRunStateAborted)),this.state.testAnalyticsLinkData&&this.state.testAnalyticsLinkData.testAnalyticsLinkMessage&&!this.props.isBuildTimeline&&s.createElement(p.FPSLinkComponent,{className:"failing-test-analytics-link",href:this.state.testAnalyticsLinkData.testAnalyticsLink,telemetrySource:g.featureAnalyticsInProductLink_UniqueFailingTests_TestTab,telemetryProperties:this.props.telemetryPropertiesForInProductLink},this.state.testAnalyticsLinkData.testAnalyticsLinkMessage)),s.createElement("div",{className:"inprogress-summary-view-body"},s.createElement(v.ResultSummaryColoredNumberChartComponent,{title:y.TestOutcome_Passed,value:null!=this._currentState.aggregatedTestsCount?this._currentState.aggregatedTestsCount.passedTests:0,color:l.TestReportColorPalette.Passed}),s.createElement(v.ResultSummaryColoredNumberChartComponent,{title:y.TestOutcome_Failed,value:null!=this._currentState.aggregatedTestsCount?this._currentState.aggregatedTestsCount.failedTests:0,color:l.TestReportColorPalette.Failed}),null!=this._currentState.aggregatedTestsCount&&!!this._currentState.aggregatedTestsCount.abortedTests&&s.createElement(v.ResultSummaryColoredNumberChartComponent,{title:y.TestOutcome_Aborted,value:null!=this._currentState.aggregatedTestsCount?this._currentState.aggregatedTestsCount.abortedTests:0,color:l.TestReportColorPalette.Aborted}),s.createElement("div",{className:"donut-chart-legend-container"},this._getDonutChartLegends()))));{let e=this.props.artifactData.data.mainData;if(2!==this.props.artifactData.data.mainData.status&&1!==e.status)return s.createElement("div",null,y.NoTestsMessageWhileBuildInProgress);let t=1===e.definition.type;if(!e.controller&&!t)return s.createElement("div",null,y.BuildDoesNotHaveTestReports);if(1===e.status)return s.createElement("div",null,y.NoTestsMessageWhileBuildInProgress);if(e.deleted)return s.createElement("div",null," ",y.BuildDeletedNoTestResults)}return s.createElement("div",null,y.NoTestResultsMessage,"}")}_getDonutChartLegends(){let e={legend:[]};return this._currentState.aggregatedTestsCount&&(e.legend.push({count:this._currentState.aggregatedTestsCount.notExecutedTests,label:y.TestOutcome_NotExecuted,color:l.TestReportColorPalette.NotExecuted}),this._currentState.aggregatedTestsCount.notImpactedTests&&e.legend.push({count:this._currentState.aggregatedTestsCount.notImpactedTests,label:y.ResultStateNotImpacted,color:l.TestReportColorPalette.NotImpacted}),this._currentState.aggregatedTestsCount.notImpactedTests&&e.legend.push({count:this._currentState.aggregatedTestsCount.notImpactedTests,label:y.ResultStateNotImpacted,color:l.TestReportColorPalette.NotImpacted}),e.legend.push({count:this._currentState.aggregatedTestsCount.otherTests,label:y.OthersText,color:l.TestReportColorPalette.OtherOutcome})),s.createElement(_.DonutChartLegendComponent,Object.assign({},e))}}}(),function(e){N=t.SourcesTestResultSource={},Object.defineProperty(t,"__esModule",{value:!0});t.SourcesTestResultSource.TestResultSource=class{constructor(e){this._inProgressDPRequestParams={state:"InProgress"},this._completedDPRequestParams={state:"Completed"},this.buildSummaryDataProviderName="ms.vss-test-web.test-tab-build-summary-data-provider",this.releaseSummaryDataProviderName="ms.vss-test-web.test-tab-release-summary-data-provider"}getTestReportFromDataProvider(e,t){return new Promise(async(s,a)=>{try{const r=t.pageContext.getService("IVssContributionService");if(e.status===l.ViewContextStatus.InProgress)return s(await r.getDataAsync(this._getDataProviderName(e),this._inProgressDPRequestParams,!0));const n=r.getData(this._getDataProviderName(e));return this._isDataProviderCacheValid(r,n,e)?s(n):s(await this._refreshAndGetDataProviderCache(r,e))}catch(e){a(e)}})}_isDataProviderCacheValid(e,t,s){return!(!t||s.viewContext===l.ViewContext.Build&&t.testResultsContext.build.id!==s.data.mainData.id||s.viewContext===l.ViewContext.Release&&(t.testResultsContext.release.id!==s.data.mainData.id||t.testResultsContext.release.environmentId!==s.data.subData.environment.id)||e.getData(this._getDataProviderName(s),this._inProgressDPRequestParams))}async _refreshAndGetDataProviderCache(e,t){const s=e.getData(this._getDataProviderName(t),this._completedDPRequestParams);return this._isDataProviderCacheValid(e,s,t)?s:await e.getDataAsync(this._getDataProviderName(t),this._completedDPRequestParams,!0)}_getDataProviderName(e){return e.viewContext===l.ViewContext.Build?this.buildSummaryDataProviderName:this.releaseSummaryDataProviderName}}}(),function(e){x=t.ActionsTestResultsReportActionsCreator={},Object.defineProperty(t,"__esModule",{value:!0});t.ActionsTestResultsReportActionsCreator.TestResultsReportActionsCreator=class{constructor(e,t,s){this._actionHub=e,this._context=t,this._viewContextData=s,this._testResultSource=new N.TestResultSource(t)}initialize(e){this._testResultSource.getTestReportFromDataProvider(e,this._context).then(t=>{t?this._invokeActions(t,e):(this._actionHub.onSummaryLoaded.invoke({context:e,errorCode:1}),h.publishEvent(this._context.pageContext,this._viewContextData,g.featureTestTab_ErrorInSummaryDataProvider,{DataProviderName:"test-tab-build-summary-data-provider",reason:"No data returned from the data provider"}))}).catch(t=>{console.error(t),this._actionHub.onSummaryLoaded.invoke({context:e,errorMessage:t,errorCode:2})})}refreshTestResulstsSummary(e){this._testResultSource.getTestReportFromDataProvider(e,this._context).then(t=>{this._invokeActions(t,e)}).catch(t=>{console.error(t),this._actionHub.onSummaryLoaded.invoke({context:e,errorMessage:t,errorCode:2})})}_invokeActions(e,t){let s=!1;e.totalRunsCount>0&&e.noConfigRunsCount>0&&e.totalRunsCount===e.noConfigRunsCount&&(s=!0),this._checkForData(e)?(this._actionHub.initializeTestResultSummary.invoke({summaryData:e,viewContextStatus:t.status}),this._actionHub.onSummaryLoaded.invoke({context:t,isNoConfigRuns:s})):this._actionHub.onSummaryLoaded.invoke({context:t,errorCode:1,isNoConfigRuns:s})}_checkForData(e){return e.aggregatedResultsAnalysis.totalTests>0||this._areThereNotImpactedTests(e)||this._areThereRunsByState(4,e)||this._areThereRunsByState(2,e)}_areThereRunsByState(e,t){return t.aggregatedResultsAnalysis.runSummaryByState&&t.aggregatedResultsAnalysis.runSummaryByState[e]&&t.aggregatedResultsAnalysis.runSummaryByState[e].runsCount>0}_areThereNotImpactedTests(e){return e.aggregatedResultsAnalysis.resultsByOutcome&&e.aggregatedResultsAnalysis.resultsByOutcome[14]&&e.aggregatedResultsAnalysis.resultsByOutcome[14].count>0}}}(),function(e){t.ComponentsSummary={},Object.defineProperty(t,"__esModule",{value:!0});t.ComponentsSummary.Summary=class extends r.VssComponent{constructor(e,t){super(e,t),this._handleStoreChange=(()=>{const e=this._summaryViewStore.getState();e.refreshSummary?this._summaryActionsCreator.refreshTestResulstsSummary(this.props.artifactData):this.setState(e)}),this._testSummaryString="TestSummary",this._performanceService=this.context.pageContext.getService("IVssPerformanceService"),this._summaryActionsCreator=new x.TestResultsReportActionsCreator(this.props.actionsHub,t,this.props.artifactData),this._summaryViewStore=new P.SummaryViewStore("TestTabInBuildComponent",t,this.props.actionsHub,this.props.artifactData),this.state=this._summaryViewStore.getState()}componentDidUpdate(e){d.hasArtifactChanged(this.props.artifactData,e.artifactData)&&this._summaryActionsCreator.initialize(this.props.artifactData)}componentDidMount(){this._summaryViewStore.addChangedListener(this._handleStoreChange),this._summaryActionsCreator.initialize(this.props.artifactData);let e=this.props.artifactData.contributionSource;e!==l.ContributionSource.Build&&e!==l.ContributionSource.Pipeline||this._performanceService.addSplitTiming(T.TestSummaryLoaded,e)}componentWillUnmount(){this._summaryViewStore.removeChangedListener(this._handleStoreChange),this._summaryViewStore.dispose()}render(){if(!this.state.shouldShowSummary)return null;const e=this.state.isInProgressView?s.createElement(D.InProgressSummaryView,{store:this._summaryViewStore,artifactData:this.props.artifactData,telemetryPropertiesForInProductLink:this._getTelemetryPropertiesForInProductLink()}):s.createElement(b.CompletedSummaryView,{store:this._summaryViewStore,artifactData:this.props.artifactData,telemetryPropertiesForInProductLink:this._getTelemetryPropertiesForInProductLink()}),t=[{key:this._testSummaryString,title:y.TestSummaryTitle,onRenderContent:()=>e}];let a=this.props.artifactData.contributionSource===l.ContributionSource.Pipeline?"test-results-summary-view pipeline-summary":"test-results-summary-view";return s.createElement("div",{className:a},s.createElement("div",{className:"test-summary-view"},s.createElement(S.Accordion,{items:t,initiallyExpandAll:!0,className:"summary-accordion",onItemChanged:(e,t)=>this._summaryExpandedOrCollapsedTelemetry(e,t)})))}_summaryExpandedOrCollapsedTelemetry(e,t){e==this._testSummaryString&&h.publishEvent(this.context.pageContext,this.props.artifactData,g.featureTestTab_SummaryExpandCollapseClicked,{State:t})}_getTelemetryPropertiesForInProductLink(){return{[g.workflow]:l.ViewContext[this.props.artifactData.viewContext].toString(),[g.id]:this.props.artifactData.data.mainData.id.toString()}}}}()},["Resources","Components/DonutChartLegend","Components/ResultSummaryDetailsChart","Components/TestAnalyticsLink","Actions/TestResultsReportActionsHub","Store/SummaryViewStore","Components/CompletedSummaryView","Components/ResultSummaryColoredNumberChart","Components/InProgressSummaryView","Sources/TestResultSource","Actions/TestResultsReportActionsCreator","Components/Summary"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-test-web.test-testSummary"}}));